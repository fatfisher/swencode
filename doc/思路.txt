思路：如果一个字符串被认定是encode，则开始解码。
//首先从字符串中获得解码需要的key。通过两步实现。截取字符串的第2个字符，它的大小表示key有几个字符。
//从第3个字符开始，就是key，长度由第2个字符确定。再往后就是encode的字符串。
//第1个字符表示什么意思呢？表示encode和decode的方法。
//暂且将这种方法定为方式1。

//================================= 第1种encode、decode方式 ==============================================
//直接将字符翻译成hex。适合ASCII字符，中文好像也可以。
//前面附加1字符表示编码方式。编码方式（0:unknow;1:UTF-8;2:GBK;3:ISO8859-1）
//结果："abc中文"-->"616263E4B8ADE69687"(1:UTF-8)-->"abc中文"  （php不分中文编码方式，只按照byte(char)转换成Hex串）

//encode方式1。前面附加一个字符，表示中文的编码方式。缺省中文编码方式1:UTF-8。
//其实php里面不分这个，照byte（也就是char）编码。GBK也同样编码过去。

//decode方式1。要去掉第一个字符（编码方式）。


//================================= 第2种encode、decode方式 ==============================================
//在第一种方式的基础上。每个字符hex用分隔符"-"分开，便于解码识别。不适用中文。
//结果："abc中文"-->"-61-62-63-d6-d0-ce-c4"-->"abc中文"


//================================= 第3种encode、decode方式 ==============================================
//还没想好。
//结果："abc中文"-->
